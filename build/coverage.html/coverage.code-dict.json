{"/home/travis/build/npmtest/node-npmtest-react-native-store/test.js":"/* istanbul instrument in package npmtest_react_native_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native-store/lib.npmtest_react_native_store.js":"/* istanbul instrument in package npmtest_react_native_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_native_store = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_native_store = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native-store/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-native-store && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_native_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_native_store\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_native_store.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_native_store.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_native_store.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_native_store.__dirname + '/lib.npmtest_react_native_store.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/index.js":"'use strict';\n\nvar Store = require('./store.js');\nvar store = new Store({\n    dbName: \"react-native-store\"\n});\n\nmodule.exports = store;","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/store.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AsyncStorage = require('react-native').AsyncStorage;\nvar Model = require('./model.js');\nvar Util = require('./util.js');\n\nvar Store = function () {\n    function Store(opts) {\n        _classCallCheck(this, Store);\n\n        this.dbName = opts.dbName;\n    }\n\n    _createClass(Store, [{\n        key: '_getCurrentVersion',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(versionKey) {\n                var currentVersion;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return AsyncStorage.getItem(versionKey);\n\n                            case 2:\n                                currentVersion = _context.sent;\n\n                                currentVersion = currentVersion || 0;\n                                return _context.abrupt('return', parseFloat(currentVersion));\n\n                            case 5:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            return function _getCurrentVersion(_x) {\n                return ref.apply(this, arguments);\n            };\n        }()\n    }, {\n        key: 'migrate',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {\n                var migrations, versionKey, currentVersion, target, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, migration;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                migrations = require('./migrations.js');\n                                versionKey = this.dbName + '_version';\n                                _context2.next = 4;\n                                return this._getCurrentVersion(versionKey);\n\n                            case 4:\n                                currentVersion = _context2.sent;\n                                target = migrations.slice(-1)[0];\n\n                                if (!(currentVersion == target.version)) {\n                                    _context2.next = 8;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return');\n\n                            case 8:\n                                _iteratorNormalCompletion = true;\n                                _didIteratorError = false;\n                                _iteratorError = undefined;\n                                _context2.prev = 11;\n                                _iterator = migrations[Symbol.iterator]();\n\n                            case 13:\n                                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                                    _context2.next = 23;\n                                    break;\n                                }\n\n                                migration = _step.value;\n\n                                if (!(migration.version <= currentVersion)) {\n                                    _context2.next = 17;\n                                    break;\n                                }\n\n                                return _context2.abrupt('continue', 20);\n\n                            case 17:\n                                migration.perform();\n                                _context2.next = 20;\n                                return AsyncStorage.setItem(versionKey, migration.version.toString());\n\n                            case 20:\n                                _iteratorNormalCompletion = true;\n                                _context2.next = 13;\n                                break;\n\n                            case 23:\n                                _context2.next = 29;\n                                break;\n\n                            case 25:\n                                _context2.prev = 25;\n                                _context2.t0 = _context2['catch'](11);\n                                _didIteratorError = true;\n                                _iteratorError = _context2.t0;\n\n                            case 29:\n                                _context2.prev = 29;\n                                _context2.prev = 30;\n\n                                if (!_iteratorNormalCompletion && _iterator.return) {\n                                    _iterator.return();\n                                }\n\n                            case 32:\n                                _context2.prev = 32;\n\n                                if (!_didIteratorError) {\n                                    _context2.next = 35;\n                                    break;\n                                }\n\n                                throw _iteratorError;\n\n                            case 35:\n                                return _context2.finish(32);\n\n                            case 36:\n                                return _context2.finish(29);\n\n                            case 37:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this, [[11, 25, 29, 37], [30,, 32, 36]]);\n            }));\n\n            return function migrate() {\n                return ref.apply(this, arguments);\n            };\n        }()\n    }, {\n        key: 'model',\n        value: function model(modelName) {\n            return new Model(modelName, this.dbName);\n        }\n\n        // clear store\n\n    }, {\n        key: 'clear',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return AsyncStorage.removeItem(this.dbName);\n\n                            case 2:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            return function clear() {\n                return ref.apply(this, arguments);\n            };\n        }()\n    }]);\n\n    return Store;\n}();\n\nmodule.exports = Store;\n\n// Store.model(\"user\").get({ id:1 },{fite}).then().fail();","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/filter.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Filter = function () {\n    function Filter() {\n        _classCallCheck(this, Filter);\n\n        this.comparisonOperators = ['gt', 'gte', 'lt', 'lte', 'between', 'inq', 'nin', 'regexp'];\n        this.logicalOperators = ['and', 'or'];\n    }\n\n    _createClass(Filter, [{\n        key: 'apply',\n        value: function apply(set, settings) {\n            var where = settings.where || null;\n            var fields = settings.fields || {};\n            var order = settings.order || {};\n            var offset = settings.offset || 0;\n            var limit = settings.limit;\n            var result = [];\n            //Elements that satisfy where filter\n            if (where != null) {\n                for (var i in set) {\n                    var element = set[i];\n                    //Empty filter includes everything\n                    if (this.evaluate(where, element)) result.push(this.applyFieldsFilter(element, fields));\n                }\n            } else {\n                //result needs to be in an array, set can be an object\n                //so you cant just result = set\n                for (var i in set) {\n                    var element = set[i];\n                    result.push(this.applyFieldsFilter(element, fields));\n                }\n            }\n            //Found a lot of conflicting info on whether Array.sort() is stable,\n            //but in testing so far it seems to be.\n            //Reverse the arrays of keys to get the desired weight\n            var orderKeys = Object.keys(order).reverse();\n            for (var key in orderKeys) {\n                //If for some reason the value of the order is not ASC or DESC,\n                //sort by ASC\n                var greater = order[orderKeys[key]] === 'DESC' ? -1 : 1;\n                var lesser = greater * -1;\n                var keySort = function keySort(a, b) {\n                    if (a[orderKeys[key]] < b[orderKeys[key]]) return lesser;\n                    if (a[orderKeys[key]] > b[orderKeys[key]]) return greater;\n                    if (a[orderKeys[key]] == b[orderKeys[key]]) return 0;\n                };\n                result.sort(keySort);\n            }\n            //Apply limit and offset filters through results.slice(offset, offset + limit)\n            if (typeof limit === 'number' && limit > 0) return result.slice(offset, offset + limit);else if (offset !== 0) return result.slice(offset);\n            return result;\n        }\n    }, {\n        key: 'evaluate',\n        value: function evaluate(filter, element) {\n            var filterKeys = Object.keys(filter);\n            if ((typeof filter === 'undefined' ? 'undefined' : _typeof(filter)) == 'object') {\n                for (var i in filterKeys) {\n                    var key = filterKeys[i];\n                    //key is either a property name, or logical operator\n                    if (this.logicalOperators.indexOf(key) > -1) {\n                        if (!this.evaluateLogicalOperator(key, filter[key], element)) return false;\n                    } else if (this.comparisonOperators.indexOf(key) > -1) {\n                        if (!this.evaluateComparisonOperator(key, filter[key], element)) return false;\n                    } else if (_typeof(filter[key]) == 'object') {\n                        if (!this.evaluate(filter[key], element[key])) return false;\n                    } else if (filter[key] != element[key]) return false;\n                }\n                return true;\n            }\n            //It technically should never reach here, but just to be safe\n            return a == b;\n        }\n    }, {\n        key: 'evaluateLogicalOperator',\n        value: function evaluateLogicalOperator(operator, filter, element) {\n            if (operator == 'and') {\n                for (var i in filter) {\n                    var comp = filter[i];\n                    if (!this.evaluate(comp, element)) return false;\n                }\n                return true;\n            } else if (operator == 'or') {\n                for (var i in filter) {\n                    var comp = filter[i];\n                    if (this.evaluate(comp, element)) return true;\n                }\n            }\n            return false;\n        }\n    }, {\n        key: 'evaluateComparisonOperator',\n        value: function evaluateComparisonOperator(operator, filter, element) {\n            if (operator == 'neq') return element != filter;else if (operator == 'gt') return element > filter;else if (operator == 'gte') return element >= filter;else if (operator == 'lt') return element < filter;else if (operator == 'lte') return element <= filter;else if (operator == 'between' && filter[0] != null && filter[1] != null) return element >= filter[0] && element <= filter[1];else if (operator == 'inq') return filter.indexOf(element) > -1 ? true : false;else if (operator == 'nin') return filter.indexOf(element) > -1 ? false : true;else if (operator == 'regexp') {\n                var regexper = (typeof filter === 'undefined' ? 'undefined' : _typeof(filter)) == 'object' ? filter : new RegExp(filter, 'i');\n                return regexper.exec(element) == null ? false : true;\n            }\n            return false;\n        }\n    }, {\n        key: 'applyFieldsFilter',\n        value: function applyFieldsFilter(element, fields) {\n            //Fields filter will exclude all keys from the element for which there\n            //is a corresponding key in the fields object with a value of false.\n            //However, if one key in the fields filter has a value of true, all\n            //keys in element that do not have a corresponding key with a value of\n            //true will be excluded.\n            //If strict = false, the former behavior occurs, if strict = true, the\n            //latter behavior occurs\n            var strict = false;\n            var result = {};\n            var fieldKeys = Object.keys(fields);\n            var elementKeys = Object.keys(element);\n            for (var key in fieldKeys) {\n                if (fields[fieldKeys[key]] === true) strict = true;\n            }\n            //NOTE: This is only for react-native-storage, which needs a _id key\n            //to function correctly. If we are on strict mode, we must add in the\n            //_id key, if we are not, we much make sure that there is no false\n            //value for it\n            if (strict) fields._id = true;else delete fields._id;\n            for (var key in elementKeys) {\n                //Applying the above described behavior. Add the property if\n                //we are being strict and the filter contains the key, or if\n                //we are not being strict and our filter does not want to remove\n                //the property.\n                if (strict && fields[elementKeys[key]] === true || !strict && !(fields[elementKeys[key]] === false)) result[elementKeys[key]] = element[elementKeys[key]];\n            }\n            return result;\n        }\n    }]);\n\n    return Filter;\n}();\n\nmodule.exports = Filter;","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/migrations.js":"\"use strict\";\n\nvar Migrations = [{\n  version: 0.2,\n  perform: function perform() {\n    // perform actions here.\n  }\n}];\n\nmodule.exports = Migrations;","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/model.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AsyncStorage = require('react-native').AsyncStorage;\nvar Util = require('./util.js');\nvar Filter = require('./filter.js');\n\nvar Model = function () {\n    function Model(modelName, dbName) {\n        _classCallCheck(this, Model);\n\n        this.dbName = dbName;\n        this.modelName = modelName;\n        this.offset = 0;\n        this.limit = 10;\n        this.modelFilter = new Filter();\n    }\n\n    _createClass(Model, [{\n        key: 'createDatabase',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return AsyncStorage.setItem(this.dbName, JSON.stringify({}));\n\n                            case 2:\n                                return _context.abrupt('return', this.getDatabase());\n\n                            case 3:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            return function createDatabase() {\n                return ref.apply(this, arguments);\n            };\n        }()\n    }, {\n        key: 'getDatabase',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {\n                var database;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return AsyncStorage.getItem(this.dbName);\n\n                            case 2:\n                                database = _context2.sent;\n\n                                if (!database) {\n                                    _context2.next = 7;\n                                    break;\n                                }\n\n                                return _context2.abrupt('return', Object.assign({}, JSON.parse(database)));\n\n                            case 7:\n                                return _context2.abrupt('return', this.createDatabase());\n\n                            case 8:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            return function getDatabase() {\n                return ref.apply(this, arguments);\n            };\n        }()\n    }, {\n        key: 'initModel',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                _context3.next = 2;\n                                return this.getDatabase();\n\n                            case 2:\n                                this.database = _context3.sent;\n\n                                this.model = this.database[this.modelName] ? this.database[this.modelName] : {\n                                    'totalrows': 0,\n                                    'autoinc': 1,\n                                    'rows': {}\n                                };\n                                this.database[this.modelName] = this.database[this.modelName] || this.model;\n\n                            case 5:\n                            case 'end':\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            return function initModel() {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        //destroy\n\n    }, {\n        key: 'destroy',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {\n                var database;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                _context4.next = 2;\n                                return AsyncStorage.getItem(this.dbName);\n\n                            case 2:\n                                database = _context4.sent;\n\n                                if (!database) {\n                                    _context4.next = 9;\n                                    break;\n                                }\n\n                                _context4.next = 6;\n                                return AsyncStorage.removeItem(this.dbName);\n\n                            case 6:\n                                _context4.t0 = _context4.sent;\n                                _context4.next = 10;\n                                break;\n\n                            case 9:\n                                _context4.t0 = null;\n\n                            case 10:\n                                return _context4.abrupt('return', _context4.t0);\n\n                            case 11:\n                            case 'end':\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            }));\n\n            return function destroy() {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // add\n\n    }, {\n        key: 'add',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(data) {\n                var autoinc;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                        switch (_context5.prev = _context5.next) {\n                            case 0:\n                                _context5.next = 2;\n                                return this.initModel();\n\n                            case 2:\n                                autoinc = this.model.autoinc++;\n\n                                if (!this.model.rows[autoinc]) {\n                                    _context5.next = 5;\n                                    break;\n                                }\n\n                                return _context5.abrupt('return', Util.error(\"ReactNativeStore error: Storage already contains _id '\" + autoinc + \"'\"));\n\n                            case 5:\n                                if (!data._id) {\n                                    _context5.next = 7;\n                                    break;\n                                }\n\n                                return _context5.abrupt('return', Util.error(\"ReactNativeStore error: Don't need _id with add method\"));\n\n                            case 7:\n                                data._id = autoinc;\n                                this.model.rows[autoinc] = data;\n                                this.model.totalrows++;\n                                this.database[this.modelName] = this.model;\n                                _context5.next = 13;\n                                return AsyncStorage.setItem(this.dbName, JSON.stringify(this.database));\n\n                            case 13:\n                                return _context5.abrupt('return', this.model.rows[data._id]);\n\n                            case 14:\n                            case 'end':\n                                return _context5.stop();\n                        }\n                    }\n                }, _callee5, this);\n            }));\n\n            return function add(_x) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // multi add\n\n    }, {\n        key: 'multiAdd',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(data) {\n                var key, value, autoinc;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                        switch (_context6.prev = _context6.next) {\n                            case 0:\n                                _context6.next = 2;\n                                return this.initModel();\n\n                            case 2:\n                                _context6.t0 = regeneratorRuntime.keys(data);\n\n                            case 3:\n                                if ((_context6.t1 = _context6.t0()).done) {\n                                    _context6.next = 16;\n                                    break;\n                                }\n\n                                key = _context6.t1.value;\n                                value = data[key];\n                                autoinc = this.model.autoinc++;\n\n                                if (!this.model.rows[autoinc]) {\n                                    _context6.next = 9;\n                                    break;\n                                }\n\n                                return _context6.abrupt('return', Util.error(\"ReactNativeStore error: Storage already contains _id '\" + autoinc + \"'\"));\n\n                            case 9:\n                                if (!value._id) {\n                                    _context6.next = 11;\n                                    break;\n                                }\n\n                                return _context6.abrupt('return', Util.error(\"ReactNativeStore error: Don't need _id with add method\"));\n\n                            case 11:\n                                value._id = autoinc;\n                                this.model.rows[autoinc] = value;\n                                this.model.totalrows++;\n                                _context6.next = 3;\n                                break;\n\n                            case 16:\n                                this.database[this.modelName] = this.model;\n                                _context6.next = 19;\n                                return AsyncStorage.setItem(this.dbName, JSON.stringify(this.database));\n\n                            case 19:\n                                return _context6.abrupt('return', this.model.rows);\n\n                            case 20:\n                            case 'end':\n                                return _context6.stop();\n                        }\n                    }\n                }, _callee6, this);\n            }));\n\n            return function multiAdd(_x2) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // update\n\n    }, {\n        key: 'update',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(data, filter) {\n                var results, rows, filterResult, row, element, i;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                        switch (_context7.prev = _context7.next) {\n                            case 0:\n                                _context7.next = 2;\n                                return this.initModel();\n\n                            case 2:\n                                filter = filter || {};\n                                if (data._id) delete data._id;\n                                results = [];\n                                rows = this.model[\"rows\"];\n                                filterResult = this.modelFilter.apply(rows, filter);\n                                _context7.t0 = regeneratorRuntime.keys(rows);\n\n                            case 8:\n                                if ((_context7.t1 = _context7.t0()).done) {\n                                    _context7.next = 23;\n                                    break;\n                                }\n\n                                row = _context7.t1.value;\n                                _context7.t2 = regeneratorRuntime.keys(filterResult);\n\n                            case 11:\n                                if ((_context7.t3 = _context7.t2()).done) {\n                                    _context7.next = 21;\n                                    break;\n                                }\n\n                                element = _context7.t3.value;\n\n                                if (!(rows[row]['_id'] === filterResult[element]['_id'])) {\n                                    _context7.next = 19;\n                                    break;\n                                }\n\n                                for (i in data) {\n                                    rows[row][i] = data[i];\n                                }\n                                results.push(rows[row]);\n                                this.database[this.modelName] = this.model;\n                                _context7.next = 19;\n                                return AsyncStorage.setItem(this.dbName, JSON.stringify(this.database));\n\n                            case 19:\n                                _context7.next = 11;\n                                break;\n\n                            case 21:\n                                _context7.next = 8;\n                                break;\n\n                            case 23:\n                                return _context7.abrupt('return', results.length ? results : null);\n\n                            case 24:\n                            case 'end':\n                                return _context7.stop();\n                        }\n                    }\n                }, _callee7, this);\n            }));\n\n            return function update(_x3, _x4) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // remove a single entry by id\n\n    }, {\n        key: 'updateById',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(data, id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                        switch (_context8.prev = _context8.next) {\n                            case 0:\n                                _context8.next = 2;\n                                return this.update(data, {\n                                    where: {\n                                        _id: id\n                                    }\n                                });\n\n                            case 2:\n                                result = _context8.sent;\n                                return _context8.abrupt('return', result ? result[0] : null);\n\n                            case 4:\n                            case 'end':\n                                return _context8.stop();\n                        }\n                    }\n                }, _callee8, this);\n            }));\n\n            return function updateById(_x5, _x6) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // remove\n\n    }, {\n        key: 'remove',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(filter) {\n                var results, rowsToDelete, rows, filterResult, row, element, i;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                        switch (_context9.prev = _context9.next) {\n                            case 0:\n                                _context9.next = 2;\n                                return this.initModel();\n\n                            case 2:\n                                filter = filter || {};\n                                results = [];\n                                rowsToDelete = [];\n                                rows = this.model[\"rows\"];\n                                filterResult = this.modelFilter.apply(rows, filter);\n\n                                for (row in rows) {\n                                    for (element in filterResult) {\n                                        if (rows[row]['_id'] === filterResult[element]['_id']) rowsToDelete.push(row);\n                                    }\n                                }\n                                for (i in rowsToDelete) {\n                                    row = rowsToDelete[i];\n\n                                    results.push(this.model[\"rows\"][row]);\n                                    delete this.model[\"rows\"][row];\n                                    this.model[\"totalrows\"]--;\n                                }\n                                this.database[this.modelName] = this.model;\n                                _context9.next = 12;\n                                return AsyncStorage.setItem(this.dbName, JSON.stringify(this.database));\n\n                            case 12:\n                                return _context9.abrupt('return', results.length ? results : null);\n\n                            case 13:\n                            case 'end':\n                                return _context9.stop();\n                        }\n                    }\n                }, _callee9, this);\n            }));\n\n            return function remove(_x7) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // remove a single entry by id\n\n    }, {\n        key: 'removeById',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                        switch (_context10.prev = _context10.next) {\n                            case 0:\n                                _context10.next = 2;\n                                return this.remove({\n                                    where: {\n                                        _id: id\n                                    }\n                                });\n\n                            case 2:\n                                result = _context10.sent;\n                                return _context10.abrupt('return', result ? result[0] : null);\n\n                            case 4:\n                            case 'end':\n                                return _context10.stop();\n                        }\n                    }\n                }, _callee10, this);\n            }));\n\n            return function removeById(_x8) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // find\n\n    }, {\n        key: 'find',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(filter) {\n                var results, rows;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                        switch (_context11.prev = _context11.next) {\n                            case 0:\n                                _context11.next = 2;\n                                return this.initModel();\n\n                            case 2:\n                                filter = filter || {};\n                                results = [];\n                                rows = this.model[\"rows\"];\n\n                                results = this.modelFilter.apply(rows, filter);\n                                return _context11.abrupt('return', results.length ? results : null);\n\n                            case 7:\n                            case 'end':\n                                return _context11.stop();\n                        }\n                    }\n                }, _callee11, this);\n            }));\n\n            return function find(_x9) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // find a single entry by id\n\n    }, {\n        key: 'findById',\n        value: function () {\n            var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                    while (1) {\n                        switch (_context12.prev = _context12.next) {\n                            case 0:\n                                _context12.next = 2;\n                                return this.find({\n                                    where: {\n                                        _id: id\n                                    }\n                                });\n\n                            case 2:\n                                result = _context12.sent;\n                                return _context12.abrupt('return', result ? result[0] : null);\n\n                            case 4:\n                            case 'end':\n                                return _context12.stop();\n                        }\n                    }\n                }, _callee12, this);\n            }));\n\n            return function findById(_x10) {\n                return ref.apply(this, arguments);\n            };\n        }()\n\n        // get\n\n    }, {\n        key: 'get',\n        value: function get(filter) {\n            filter = filter || {};\n            filter.limit = 1;\n            return this.find(filter);\n        }\n    }]);\n\n    return Model;\n}();\n\nmodule.exports = Model;","/home/travis/build/npmtest/node-npmtest-react-native-store/node_modules/react-native-store/lib/util.js":"'use strict';\n\nmodule.exports = {\n    log: function log(msg) {\n        console.log(msg);\n    },\n    error: function error(msg) {\n        console.error(msg);\n    }\n};"}